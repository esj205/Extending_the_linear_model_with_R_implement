amlxray[amlxray$downs=='yes', 1:4]
(ii <- which(amlxray$downs=='yes'))
ramlxray <- amlxray[-c(ii,ii+1),]
library(survival)
cmod <- clogit(disease ~ Sex+Mray+Fray+CnRay+strate(ID),ramlxray)
cmod <- clogit(disease ~ Sex+Mray+Fray+CnRay+strata(ID),ramlxray)
summary(cmod)
cmodr <- clogit(disease ~ Fray + unclass(CnRay)+strata(ID), ramlxray)
summary(cmodr)
gmod <- glm(disease ~ Fray + unclass(CnRay), family=binomial, ramlxray)
summary(gmod)
sumary(gmod)
View(predval)
View(mpv)
help('gather')
#1. Poisson Regression
barplot(dpois(0:5, 0.5), xlab='y', ylab='Probability', names=0:5,
main ='mean=0.5')
barplot(dpois(0:10, 2), xlab='y', ylab='Probability', names=0:5,
main ='mean=2')
barplot(dpois(0:15, 5), xlab='y', ylab='Probability', names=0:5,
main ='mean=5')
#1. Poisson Regression
barplot(dpois(0:5, 0.5), xlab='y', ylab='Probability', names=0:5,
main ='mean=0.5')
barplot(dpois(0:10, 2), xlab='y', ylab='Probability', names=0:10,
main ='mean=2')
barplot(dpois(0:15, 5), xlab='y', ylab='Probability', names=0:15,
main ='mean=5')
data(gala, package='faraway')
gala <- gala[,-2]
modl <- lm(Species ~ . , gala)
plot(modl, 1)
modt <- lm(sqrt(Species) ~ ., gala)
plot(modt, 1)
library(faraway)
sumary(modt)
modp <- glm(Species ~., family=poisson, gala)
sumary(modp)
#2. Dispersed Poisson Model
halfnorm(residuals(modp))
plot(log(fitted(modp)), log((gala$Species-fitted(modp))^2),
xlab=expression(hat(mu)), ylab=expression((y-hat(mu))^2))
abline(0,1)
(dp <- sum(residuals(modp, type='pearson')^2/modp$df.residual))
sumary(modp, dispersion=dp)
modd <- glm(Species ~ ., family=quasipoisson, gala)
drop1(modd, test='F')
#3. Rate Models
round(xtabs(ca/cells ~ doseamt + doserate, dicentric),2)
with(dicentric, interaction.plot(doseamt, doserate, ca/cells,
legend=FALSE))
lmod <- lm(ca/cells ~ log(doserate)*factor(dosemat), dicentric)
lmod <- lm(ca/cells ~ log(doserate)*factor(doseamt), dicentric)
sumary(lmod)$adj
summary(lmod)$adj
plot(residuals(lmod) ~ fitted(lmod), xlab='Fitted', ylab='Residuals')
abline(h=0)
dicentric$dosef <- factor(dicentric$doseamt)
pmod <- glm(ca ~ log(cells)+log(doserate)*dosef, family=poisson, dicentric)
sumary(pmod)
rmod <- glm(ca ~ offset(log(cells))+log(doserate)*dosef, family=poission, dicentric)
rmod <- glm(ca ~ offset(log(cells))+log(doserate)*dosef, family=poisson, dicentric)
sumary(rmod)
#4. Negative Binomial
modp <- glm(skips ~ . , family=poisson, data=solder)
c(deviance(modp), df.residual(modp))
modp2 <- glm(skips ~ (Opening + Solder + Mask + PadType + Panel)^2,
family=poisson, data=solder)
deviance(modp2)
pchisq(deviance(modp2), df.residual(modp2), lower=FALSE)
library(MASS)
modn <- glm(skips ~ . , negative.binomial(1), solder)
modn
modn <- glm.nb(skips ~ . , solder)
summary(modn)
#5. Zero Inflated Count Models
library(pscl)
#5. Zero Inflated Count Models
install.packages('pscl')
#5. Zero Inflated Count Models
library(pscl)
modp <- glm(art ~ . , data=bioChemists, family=poisson)
sumary(modp)
ocount <- table(bioChemists$art)[1:8]
pcount <- colSums(predporb(modp)[,1:8])
pcount <- colSums(predprob(modp)[,1:8])
plot(pcount, ocount, type='n', xlab='Predicted', ylab='Observed')
text(pcount, ocount, 0:7)
plot(pcount, as.numeric(ocount), type='n', xlab='Predicted', ylab='Observed')
text(pcount, ocount, 0:7)
modh <- hurdle(art ~ . , data=bioChemists)
summar(modh)
summary(modh)
modz <- zeroinfl(art ~ . , data=bioChemists)
summary(modz)
plot(fitted(modh), fitted(modz), xlab='Hurdle predictions', ylab='ZIP predictions')
abline(0,1)
modz2 <- zeroinfl(art ~ fem+kid5+ment | ment, data=bioChemists)
summary(modz2)
(lrt <- 2*(modz$loglik-modz2$loglik))
1-pchisq(6.1728,6)
exp(coef(modz2))
newman <- data.frame(fem='Men', mar='Single', kid5=0, ment=6)
predict(modz2, newdata = newman, type='prob')
predict(modz2, newdata = newman, type='zero')
data(jsp, package = 'faraway')
jspr <- jsp[jsp$year==2,]
ggplot(jspr, aes(x=raven, y=math)) +
xlab('Raven Score') +
ylab('Math Score') +
geom_point(position=position_jitter(), alpha=0.3)
library(ggplot2)
ggplot(jspr, aes(x=raven, y=math)) +
xlab('Raven Score') +
ylab('Math Score') +
geom_point(position=position_jitter(), alpha=0.3)
ggplot(jspr, aes(x=social, y=math)) +
xlab('Social Class') +
ylab('Math Score') +
geom_boxplot()
glin <- lm(math ~ raven*gender*social, jspr)
anova(glin)
glin <- lm(math ~ raven*social, jspr)
anova(glin)
glin <- lm(math ~ raven + social, jspr)
anova(glin)
summary(glin)
table(jpsr$school)
table(jspr$school)
mmod <- lmer(math ~ raven*social*gender+(1|school)+(1|school:class), data=jspr)
install.packages('lme4')
library(lme4)
mmod <- lmer(math ~ raven*social*gender+(1|school)+(1|school:class), data=jspr)
install.packages('pbkrtest')
mmodr <- lmer(math ~ raven*social+(1|school)+(1|school:class), data=jspr)
library(pbkrtest)
KRmodcomp(mmod, mmodr)
all3 <- lmer(math ~ raven*social*gender + (1|school) + (1|school:class),
data=jspr, REML = FALSE)
all2 <- update(all3, . ~ . = raven:social:gender)
all2 <- update(all3, . ~ . - raven:social:gender)
notrs <- update(all2, . ~ . - raven:social)
notrg <- update(all2, . ~ . - raven:gender)
notsg <- update(all2, . ~ . - social:gender)
onlyrs <- update(all2, . ~ . - social:gender - raven:gender)
all1 <- update(all2, . ~ . - social:gender - raven:gender - social:raven)
nogen <- update(all1, . ~ . -gender)
anova(all3, all2, notrs, notrg, notsg, onlyrs, all1, nogen)[,1:4]
jspr$craven <- jpsr$raven - mean(jspr$raven)
mmod <- lmer(math ~ craven*social+(1|school)+(1|school:class), jspr)
jspr$craven <- jspr$raven - mean(jspr$raven)
mmod <- lmer(math ~ craven*social+(1|school)+(1|school:class), jspr)
sumary(mmod)
library(faraway)
sumary(mmod)
diagd <- fortify(mmod)
View(diagd)
ggplot(diagd, aes(sample=.resid))+stat_qq()
ggplot(diagd, aes(x=.fitted, y=.resid)) + geom_point(alpha=0.3) +
geom_hline(yintercept = 0) + xlab('Fitted') + ylab('Residuals')
qqnorm(ranef(mmod)$school[[1]], main='School effects')
qqnorm(ranef(mmod)$'school:class'[[1]], main = 'Class effects')
adjscores <- ranef(mmod)$school[[1]]
rawscores <- coef(lm(math ~ school-1, jspr))
rawscores <- rawscores - mean(rawscores)
plot(rawscores, adjscores)
sint <- c(9, 14, 29)
text(rawscores[sint], adjscores[sint]+0.2, c('9', '15', '30'))
install.packages('RLRsim')
library(RLRsim)
mmodc <- lmer(math ~ craven*social+(1|school:class), jspr)
mmods <- lmer(math ~ craven*social+(1|school), jspr)
exactRLRT(mmodc, mmod, mmods)
exactRLRT(mmods, mmod, mmodc)
schraven <- lm(raven ~ school, jspr)$fit
mmodc <- lmer(math ~ craven*social+schraven*social+(1|school)+(1|school:class), jspr)
KRmodcomp(mmod, mmodc)
data(psipackage = 'faraway')
data(psid, package = 'faraway')
head(psid)
library(dplyr)
psid20 <- filter(psid, person <=20)
library(ggplot2)
ggplot(psid20, aes(x=year, y=income)) + geom_line() + facet_wrap(~ person)
ggplot(psid20, aes(x=year, y=income+100, group = person)) +
geom_line() +
facet_wrap(~ sex) +
scale_y_log10()
lmod <- lm(log(income) ~ I(year-78), subset=(person==1), psid)
coef(lmod)
library(lme4)
ml <- lmList(log(income) ~ I(year-78) | person, psid)
intercepts <- sapply(ml, coef)[1,]
slopes <- sapply(ml, coef)[2,]
plot(intercepts, slopes, xlab='Intercept', ylab='Slope')
psex <- psid$sex[match(1:85, psid$person)]
boxplot(split(slopes, psex))
t.test(slopes[psex=='M'], slopes[psex=='F'])
t.test(intercepts[psex=='M'], intercepts[psex=='F'])
psid$cyear <- psid$year - 78
lmod <- lmer(log(income) ~ cyear*sex + age + educ + (cyear|person), psid)
data(psid, package = 'faraway')
head(psid)
library(dplyr)
psid20 <- filter(psid, person <=20)
library(ggplot2)
ggplot(psid20, aes(x=year, y=income)) + geom_line() + facet_wrap(~ person)
ggplot(psid20, aes(x=year, y=income+100, group = person)) +
geom_line() +
facet_wrap(~ sex) +
scale_y_log10()
lmod <- lm(log(income) ~ I(year-78), subset=(person==1), psid)
coef(lmod)
library(lme4)
ml <- lmList(log(income) ~ I(year-78) | person, psid)
intercepts <- sapply(ml, coef)[1,]
slopes <- sapply(ml, coef)[2,]
plot(intercepts, slopes, xlab='Intercept', ylab='Slope')
psex <- psid$sex[match(1:85, psid$person)]
boxplot(split(slopes, psex))
t.test(slopes[psex=='M'], slopes[psex=='F'])
t.test(intercepts[psex=='M'], intercepts[psex=='F'])
library(lme4)
psid$cyear <- psid$year - 78
mmod <- lmer(log(income) ~ cyear*sex + age + educ + (cyear|person), psid)
summary(mmod, digits=3)
sumary(mmod, digits=3)
library(faraway)
sumary(mmod, digits=3)
install.packages('pbkrtest')
library(pbkrtest)
mmod <- lmer(log(income) ~ cyear*sex + age + educ +(cyear|person), psid, REML=FALSE)
mmodr <- lmer(log(income) ~ cyear + sex + age + educ + (cyear|person), psid, REML = FALSE)
KRmodcomp(mmod, mmodr)
confint(mmod, method = 'boot')
diagd <- fortify(mmod)
fortify(mmod)
fortify(model = mmod)
View(mmod)
fortify(lmod)
mmod
View(mmod)
diagd <- fortify.merMod(mmod)
data(psid, package = 'faraway')
head(psid)
library(dplyr)
psid20 <- filter(psid, person <=20)
library(ggplot2)
ggplot(psid20, aes(x=year, y=income)) + geom_line() + facet_wrap(~ person)
ggplot(psid20, aes(x=year, y=income+100, group = person)) +
geom_line() +
facet_wrap(~ sex) +
scale_y_log10()
lmod <- lm(log(income) ~ I(year-78), subset=(person==1), psid)
coef(lmod)
library(lme4)
ml <- lmList(log(income) ~ I(year-78) | person, psid)
intercepts <- sapply(ml, coef)[1,]
slopes <- sapply(ml, coef)[2,]
plot(intercepts, slopes, xlab='Intercept', ylab='Slope')
psex <- psid$sex[match(1:85, psid$person)]
boxplot(split(slopes, psex))
t.test(slopes[psex=='M'], slopes[psex=='F'])
t.test(intercepts[psex=='M'], intercepts[psex=='F'])
library(lme4)
psid$cyear <- psid$year - 78
mmod <- lmer(log(income) ~ cyear*sex + age + educ + (cyear|person), psid)
library(faraway)
sumary(mmod, digits=3)
library(pbkrtest)
mmod <- lmer(log(income) ~ cyear*sex + age + educ +(cyear|person), psid, REML=FALSE)
mmodr <- lmer(log(income) ~ cyear + sex + age + educ + (cyear|person), psid, REML = FALSE)
KRmodcomp(mmod, mmodr)
confint(mmod, method = 'boot')
diagd <- fortify.merMod(mmod)
ggplot(diagd, aes(sample=.resid)) + stat_qq() + facet_grid(~sex)
diagd$edulevel <- cut(psid$educ, c(0, 8.5, 12.5, 20), labels=c('lessHS', 'HS', 'moreHS'))
ggplot(diagd, aes(x=.fitted, y=.resid)) +
geom_point(alpha=0.3) +
geom_hline(yintercept = 0) +
facet_grid(~ edulevel) +
xlab('Fitted') +
ylab('Residuals')
View(psid20)
median(psid$year)
library(ggplot2)
library(faraway)
data(vision, package='faraway')
vision$npower <- rep(1:4, 14)
ggplot(vision, aes(y=acuity, x=npower, linetype=eye)) +
geom_line() +
facet_wrap(~ subject, ncol=4) +
scale_x_continuous('Power', breaks = 1:4, label=c('6/6', '6/18', '6/36', '6/60'))
mmod <- lmer(acuity ~ power + (1|subject) + (1|subject:eye), vision)
library(lme4)
mmod <- lmer(acuity ~ power + (1|subject) + (1|subject:eye), vision)
sumary(mmod)
4.64^2/(4.64^2+3.21^2+4.07^2)
(4.64^2+3.21^2)/(4.64^2+3.21^2+4.07^2)
library(pbkrtest)
mmod <- lmer(acuity ~ power + (1|subject) + (1|subject:eye), vision, REML = FALSE)
nmod <- lmer(acuity ~ 1 + (1|subject) + (1|subject:eye), vision, REML=FALSE)
KRmodcomp(mmod, nmod)
mmodr <- lmer(acuity ~ power + (1|subject) + (1|subject:eye), vision, REML=FALSE, subset=-43)
nmodr <- lmer(acuity ~ 1 + (1|subject) + (1|subject:eye), vision, REML=FALSE, subset = -43)
KRmodcomp(mmodr, nmodr)
op <- options(contrasts = c('contr.helmert', 'contr.poly'))
mmodr <- lmer(acuity ~ power + (1|subject) + (1|subject:eye), vision, subset=-43)
sumary(mmodr)
options(op)
contr.helmert(4)
plot(resid(mmodr) ~fitted(mmodr), xlab='Fitted', ylab='Residuals')
abline(h=0)
qqnorm(ranef(mmodr)$'subject:eye'[[1]], main='')
data(ctsib, package='faraway')
ctsib$stable <- ifelse(ctsib$CTSIB==1, 1, 0)
xtabs(stable ~ Surface + Vision, ctsib)/80
library(dplyr)
subsum <- ctsib %>%
group_by(Subject) %>%
summarise(Height=Height[1], Weight = Weight[1], stable = mean(stable), Age = Age[1], Sex = Sex[1])
library(ggplot2)
ggplot(subsum, aes(x=Height, y=stable)) + geom_point()
ggplot(subsum, aes(x=Weight, y=stable)) + geom_point()
ggplot(subsum, aes(x=Age, y=stable)) + geom_point()
ggplot(subsum, aes(x=Sex, y=stable)) + geom_boxplot()
gf <- glm(stable ~ Sex + Age + Height + Weight + Surface + Vision, binomial, data = ctsib)
sumary(gf)
library(faraway)
sumary(gf)
gfs <- glm(stable ~ Sex + Age + Height + Weight + Surface + Vision + factor(Subject),
binomial, data = ctsib)
library(MASS)
modpql <- glmmPQL(stable ~ Sex + Age + Height + Weight + Surface + Vision,
random = ~1|Subject, family = binomial, data = ctsib)
sumary(modpql)
summary(modpql)
library(lme4)
modlap <- glmer(stable ~ Sex + Age + Height + Weight + Surface + Vision + (1|Subject),
family = binomial, data = ctsib)
modgh <- glmer(stable ~ Sex + Age + Height + Weight + Surface + Vision + (1|Subject),
nAGQ = 25, family = binomial, data = ctsib)
summary(modgh)
modgh2 <- glmer(stable ~ Surface + Vision + (1|Subject), nAGQ = 25,
family = binomial, data = ctsib)
anova(modgh, modgh2)
dd <- fortify(modgh2)
dd
dd <- fortify.merMod(modgh2)
ggplot(dd, aes(sample=.resid)) + stat_qq() + facet_grid(Surface ~ Vision)
library(INLA)
install.packages('INLA')
library(INLA)
library(INLA)
install.packages('INLA')
install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(INLA)
formula <- stable ~ Surface + Vision + f(Subject, model='iid')
result <- inla(formula, family = 'binomial', data = ctsib)
sigmaalpha <- inla.tmarginal(function(x){1/sqrt(x)}, result$marginals.hyperpar$`Precision for Subject`)
x <- seq(0, 7, length.out = 100)
sdf <- data.frame(yield = x, density = inla.dmarginal(x, sigmaalpha))
ggplot(sdf, aes(x=yield, y=density)) + geom_line()
library(ggplot2)
ggplot(sdf, aes(x=yield, y=density)) + geom_line()
restab <- sapply(result$marginals.fixed, function(x){inla.zmarginal(x, silent=TRUE)})
restab <- cbind(restab, inla.zmarginal(sigmaalpha, silent=TRUE))
colnames(restab) = c('mu', 'norm', 'dome', 'open', 'alpha')
data.frame(restab)
x <- seq(-2, 11, length.out = 100)
rden <- sapply(result$marginals.fixed, function(y){inla.dmarginal(x, y)[,-1]})
rden <- sapply(result$marginals.fixed, function(y){inla.dmarginal(x, y)})[,-1]
ddf <- data.frame(yield = rep(x,3), density = as.vector(rden),
treat = gl(3, 100, labels = c('norm', 'dome', 'open')))
ggplot(ddf, aes(x=yield, y=density, linetype = treat)) + geom_line()
2*inla.pmarginal(0, result$marginals.fixed$Visiondome)
xm <- model.matrix(~ Sex + Age + Height + Weight + Surface + Vision, ctsib)
stabledat <- with(ctsib, list(Nobs = nrow(ctsib),
Nsubs = length(unique(ctsib$Subject)),
Npreds = ncol(xm),
y=stable,
subject = Subject,
x = xm))
install.packages('rstan')
library(rstan)
rt <- stanc('glmmbin.stan')
rt <- stnac('glmmbin.stan')
rt <- stanc('glmmbin.stan')
rt <- stanc('glmmbin.stan')
rt <- stanc('glmmbin.stan')
sm <- stan_model(stanc_ret = rt, verbose = FALSE)
fit <- sampling(sm, data=stabledat)
traceplot(fit, pars = 'sigmasubj', inc_warmup=FALSE)
print(fit, pars=c('sigmasubj', 'beta'))
ipars <- data.frame(extract(fit, pars=c('sigmasubj', 'beta')))
colnames(ipars)[-1] <- colnames(xm)
install.packages('reshape2')
library(reshape2)
rdf <- melt(ipars)
ggplot(rdf, aes(x=value)) +
geom_density() +
facet_wrap(~ variable, scales='free') +
geom_vline(xintercept = 0)
ppars <- data.frame(extract(fit, pars='subeff'))
srt(colMeans(ppars))
sort(colMeans(ppars))
library(faraway)
data(epilepsy, package = 'faraway')
epilepsy$period <- rep(0:4, 59)
epilepsy$drug <- factor(c('placebo', 'treatment')[epilepsy$treat+1])
epilepsy$phase <- factor(c('baseline', 'experiment')[epilepsy$expind+1])
epilepsy[epilepsy$id < 2.5, ]
epilepsy$treat+1
c('placebo', 'trt')[c(1,2,1,1)]
library(dplyr)
epilepsy %>%
group_by(drug, phase) %>%
summarise(rate=mean(seizures/timeadj)) %>%
xtabs(formula = rate ~ phase + drug)
ggplot(epilepsy, aes(x=period, y=seizures, linetype=drug, group=id)) +
geom_line() +
xlim(1,4) +
scale_y_sqrt(breaks=(0:10)^2) +
theme(legend.position = 'top', legend.direction='horizontal')
library(ggplot2)
ggplot(epilepsy, aes(x=period, y=seizures, linetype=drug, group=id)) +
geom_line() +
xlim(1,4) +
scale_y_sqrt(breaks=(0:10)^2) +
theme(legend.position = 'top', legend.direction='horizontal')
epilo <- filter(epilepsy, id != 49)
modglm <- glm(seizures ~offset(log(timeadj)) + expind + treat + I(expind*treat),
family=poission, data=epilo)
modglm <- glm(seizures ~offset(log(timeadj)) + expind + treat + I(expind*treat),
family=poisson, data=epilo)
sumary(modglm)
library(MASS)
modpql <- glmmPQL(seizures ~ offset(log(timeadj)) + expind + treat +
I(expind*treat), random = ~1|id, family=poisson, data=epilo)
summary(modpql)
library(lme4)
modgh <- glmer(seizures ~ offset(log(timeadj)) + expind + treat + I(expind*treat) +
(1|id), nAGQ = 25, family=poisson, data=epilo)
summary(modgh)
exp(-0.302)
epilo$id[epilo$id == 59] <- 49
xm <- model.matrix( ~ expind + treat + I(expind*treat), epilo)
epildat <- with(epilo, list(Nobs=nrow(epilo), Nsubs=length(unique(id)),
Npreds = ncol(xm),
y = seizures,
subject = id,
x = xm,
offset = timeadj))
library(rstan)
rt <- stanc('glmmpois.stan')
sm <- stan_model(stanc_ret = rt, verbose = TRUE)
fit <- sampling(sm, data=epildat)
rt <- stanc('glmmpois.stan')
sm <- stan_model(stanc_ret = rt, verbose = FALSE)
fit <- sampling(sm, data=epildat)
traceplot(fit, pars='sigmasubj', inc_warmup = FALSE)
ipars <- data.frame(rstan::extract(fit, pars=c('sigmasubj', 'beta')))
colnames(ipars) <- c('subject', 'intercept', 'expind', 'treat','interaction')
ggplot(ipars, aes(x=subject)) + geom_density()
ggplot(ipars, aes(x=interaction)) + geom_density() + geom_vline(xintercept = 0)
bayespval <- function(x) {p <- mean(x>0); 2*min(p, 1-p)}
smat <- apply(ipars, 2, function(x){
c(mean(x), quantile(x, c(0.025, 0.975)), bayespval(x))
})
row.names(smat) <- c('mean', 'LCB', 'UCB', 'pvalue')
t(smat)
formula <- seizures ~ offset(log(timeadj)) + expind + treat + I(expind*treat) + f(id, model='iid')
library(INLA)
result <- inla(formula, family='poisson', data=epilo)
sigmaalpha <- inla.tmarginal(function(x){
1/sqrt(x)
}, result$marginals.hyperpar$'Precision for id')
restab <- sapply(result$marginals.fixed, function(x){inla.zmarginal(x, silent = TRUE)})
restab <- cbind(restab, inla.zmarginal(sigmaalpha, silent = TRUE))
colnames(restab) = c('mu', 'expind', 'treat', 'interaction', 'alpha')
data.frame(restab)
data(ctsib, package='faraway')
ctsib$stable <- ifelse(ctsib$CTSIB==1,1,0)
install.packages('geepack')
library(geepack)
modgeep <- geeglm(stable ~ Sex + Age + Height + Weight + Surface + Vision,
id=Subject, corstr='exchangeable', scale.fix=TRUE,
data = ctsib, family=binomial)
summary(modgeep)
modgeep2 <- geeglm(stable ~ Sex + Age + Height + Weight + Surface,
id = Subject, corstr = 'exchangeable', scale.fix = TRUE,
data=ctsib, family=binomial)
anova(modgeep2, modgeep)
data(epilepsy, package = 'faraway')
modgeep <- geeglm(seizures ~ offset(log(timeadj)) + expind + treat +
I(expind*treat), id=id, familly=poisson, corstr = 'ar1',
data=epilepsy, subset=(id!=49))
modgeep <- geeglm(seizures ~ offset(log(timeadj)) + expind + treat + I(expind*treat),
id=id, familly=poisson, corstr = 'ar1',
data=epilepsy, subset=(id!=49))
summary(modgeep)
modgeep <- geeglm(seizures ~offset(log(timeadj)) + expind + treat + I(expind*treat),
id=id, family=poisson, corstr="ar1",
data= epilepsy, subset=(id!=49))
modgeep <- geeglm(seizures ~offset(log(timeadj)) + expind + treat + I(expind*treat),
id=id, familly=poisson, corstr = 'ar1',
data=epilepsy, subset=(id!=49))
modgeep <- geeglm(seizures ~ offset(log(timeadj)) + expind + treat + I(expind*treat),
id=id, family=poisson, corstr = 'ar1',
data=epilepsy, subset=(id!=49))
summary(modgeep)
